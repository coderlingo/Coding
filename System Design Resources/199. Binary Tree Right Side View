/**
* 199. Binary Tree Right Side View
* Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        if(root ==null)
            return new LinkedList<Integer>();
        List<Integer> res = new LinkedList<>();
        queue.add(root);
        queue.add(null);
        int prev = -1;
        while(!queue.isEmpty()) {
            TreeNode node = queue.poll();
            if(node == null) {
                res.add(prev);
                if(!queue.isEmpty()) {
                    queue.add(null);
                }
                continue;
            }
            prev = node.val;
            if(node.left != null) {
                queue.add(node.left);
            }
            if(node.right!=null) {
                queue.add(node.right);
            }
        }
        return res;
    }
}