/**
* 200. Number of Islands
* Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.
* An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.
*/ 

class Solution {
    public void dfs(char[][] grid, int i, int j, int n, int m) {
        if(i<0 || i>= n || j<0 || j>=m ||  grid[i][j] == '0')
            return;
        grid[i][j] = '0';
        dfs(grid,i+1,j,n,m);
        dfs(grid,i,j+1,n,m);
        dfs(grid,i-1,j,n,m);
        dfs(grid,i,j-1,n,m);
    }
    public int numIslands(char[][] grid) {
        int n = grid.length;
        int m = grid[0].length;
        int count = 0;
        for(int i=0;i<n;i++) {
            for(int j=0;j<m;j++) {
                if(grid[i][j] == '1') {
                    dfs(grid,  i, j, n, m);
                    count++;
                }
            }
        }
        return count;
    }
}