/** 
* 74. Search a 2D Matrix
* Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:
* Integers in each row are sorted from left to right.
* The first integer of each row is greater than the last integer of the previous row.
*/

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int i = 0;
        int j = matrix[0].length-1;
        while(i<matrix.length && j>=0) {
            if(target == matrix[i][j])
                return true;
            if(target > matrix[i][j]) {
                i++;
            } else 
                j--;
        }
        return false;
    }
}