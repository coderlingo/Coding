/**
* 3. Longest Substring Without Repeating Characters
* Given a string s, find the length of the longest substring without repeating characters.
*/

class Solution {
    public int lengthOfLongestSubstring(String s) {
        Map<Character,Integer> map =new HashMap<>();
        int start =0;
        int end = 0;
        int n = s.length();
        int maxLength = 0;
        while(end<n) {
            char c = s.charAt(end);
            map.put(c,map.getOrDefault(c,0)+1);
            if(map.get(c) > 1) {
                while(map.get(c)!=1) {
                    char a = s.charAt(start);
                    map.put(a,map.get(a)-1);
                    start++;
                }
            }
            if(maxLength<end-start+1) {
                maxLength = end -start+1;
            }
            end++;
        }
        return maxLength;
    }
}