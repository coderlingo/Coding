/**
* 230. Kth Smallest Element in a BST
* Given the root of a binary search tree, and an integer k, return the kth (1-indexed) smallest element in the tree.
*/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int count = 0;
    int val;
    public void inOrder(TreeNode root, int k) {
        if(root == null)
            return ;
        
        inOrder(root.left,k);
        count++;
        if(count == k){
            val = root.val;
            return ;
        }
        inOrder(root.right,k);
       
    }
    public int kthSmallest(TreeNode root, int k) {
        count = 0;
        inOrder(root,k);
        return val;
    }
}