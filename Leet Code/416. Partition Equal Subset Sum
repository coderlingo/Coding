/**
* 416. Partition Equal Subset Sum
* Given a non-empty array nums containing only positive integers, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.
*/
class Solution {
    public boolean canPartition(int[] nums) {
        if(nums.length<=1)
            return false;
        int sum = Arrays.stream(nums).reduce(0,(a,b)->a+b);
        if(sum%2==0) {
            sum = sum/2;
        } else
            return false;
        
        boolean[][] dp = new boolean[nums.length+1][sum+1];
        Arrays.fill(dp[0], false);
        for(int i = 1;i<nums.length+1;i++) {
            dp[i][0] = false;
        }
        dp[0][0] = true;
        for(int i =1;i<nums.length+1;i++) {
            for(int j = 1;j<sum+1;j++) {
                if(j-nums[i-1] >=0 ) {
                    dp[i][j] = dp[i-1][j-nums[i-1]] || dp[i-1][j];
                } else {
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[nums.length][sum];
    }
}