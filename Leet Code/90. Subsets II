/**
* 90. Subsets II
* Given an integer array nums that may contain duplicates, return all possible subsets (the power set).
* The solution set must not contain duplicate subsets. Return the solution in any order.
*/

class Solution {
    public void getSets(int[] nums, List<List<Integer>> resultSet,int idx,List<Integer> result) {
        int pos=idx;
        resultSet.add(result);
        for(int i =idx;i<nums.length;i++) {
                if (i==pos || nums[pos]!=nums[i] ){
                    result.add(nums[i]);
                    pos = i;
                    getSets(nums,resultSet,i+1, new LinkedList<>(result));
                    result.remove(result.size()-1);
                }
        }
    }
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> resultSet = new LinkedList<>();
        getSets(nums,resultSet,0,new LinkedList<Integer>());
        return new LinkedList<List<Integer>>(resultSet);
    }
}
