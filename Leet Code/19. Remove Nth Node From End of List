/**
* 19. Remove Nth Node From End of List
* Given the head of a linked list, remove the nth node from the end of the list and return its head.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getSize(ListNode node) {
        int size = 0;
        while(node!=null) {
            size++;
            node = node.next;
        }
        return size;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode node = head;
        int size = getSize(node);
        int i = size-n;
        if(i<0)
            return head;
        if(i==0) {
            head = head.next;
            return head;
        }
        ListNode ptr = head;
        ListNode prev = null;
        while(i>0) {
            prev = ptr;
            ptr = ptr.next;
            i--;   
        }
        prev.next = ptr.next;
        return head;
    }
}