/**
* 472. Concatenated Words
* Given an array of strings words (without duplicates), return all the concatenated words in the given list of words.
* A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.
*/

class Solution {
    public boolean wordBreak(String word, Set<String> dict) {
        boolean[] dp = new boolean[word.length()+1];
        if(word.isEmpty())
            return false;
        dp[0] = true;
        for(int i =0;i<=word.length();i++) {
            for(int j =1;j<=i;j++) {
                if(j==1 && i ==word.length())
                    continue;
                String temp = word.substring(j-1,i);
                if(dict.contains(temp) && dp[j-1]) {
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[word.length()];  
    }
    public List<String> findAllConcatenatedWordsInADict(String[] words) {
        Set<String> dict = new HashSet<String>(Arrays.asList(words));
        List<String> result = new LinkedList<>();
        for(int i =0;i<words.length;i++) {
            if(wordBreak(words[i],dict)) {
                result.add(words[i]);
            }
        }
        return result;
    }
}