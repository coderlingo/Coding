/**
* 54. Spiral Matrix
* Given an m x n matrix, return all elements of the matrix in spiral order.
*/

class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int left = 0;
        int right = matrix[0].length-1;
        int top = 0;
        int bottom = matrix.length-1;
        int l,r,t,b;
        List<Integer> res = new LinkedList<>();
        while(top <= bottom && left <= right) {
            l=left;
            while(l<=right) {
                res.add(matrix[top][l]);
                l++;
            }
            top++;
            t = top;
            while(t<=bottom) {
                res.add(matrix[t][right]);
                t++;
            }
            right--;
            if(right>=left && top<=bottom) {
                r = right;
                while(left<=r) {
                    res.add(matrix[bottom][r]);
                    r--;
                }
                bottom--;
                b = bottom;
                while(b>=top) {
                    res.add(matrix[b][left]);
                    b--;
                }
                left++;
            }
            
        }
        return res;
    }
}