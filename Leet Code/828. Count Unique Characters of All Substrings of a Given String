/**
* 828. Count Unique Characters of All Substrings of a Given String
* Let's define a function countUniqueChars(s) that returns the number of unique characters on s.
* For example if s = "LEETCODE" then "L", "T", "C", "O", "D" are the unique characters since they appear only once in s, therefore countUniqueChars(s) = 5.
* Given a string s, return the sum of countUniqueChars(t) where t is a substring of s.
* Notice that some substrings can be repeated so in this case you have to count the repeated ones too.
*/
class Solution {
    public int uniqueLetterString(String s) {
        int[] last = new int[26];
        int[] count = new int[26];
        int result = 0;
        for(int i =0;i<s.length();i++) {
            int n = i+1;
            int c = s.charAt(i)-'A';
            n = n-last[c];
            last[c] = i+1;
            count[c] = n;
            int sum = 0;
            for(int p = 0; p<26;p++) {
                sum+=count[p];
            }
            result+=sum;
        }
        return result;
    }
}