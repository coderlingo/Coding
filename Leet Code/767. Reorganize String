/**
* 767. Reorganize String
* Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.
* Return any possible rearrangement of s or return "" if not possible.
*/

class Solution {
    public String reorganizeString(String s) {
        Map<Character,Integer> map = new HashMap<>();
        int max = 0;
        char maxChar = '1';
        for(int i =0;i<s.length();i++) {
            char ch = s.charAt(i);
            map.put(ch,map.getOrDefault(ch,0)+1);
            if(map.get(ch)>max) {
                max = map.get(ch);
                maxChar = ch;
            }
        }
        if(max > (s.length()+1)/2)
            return "";
        char[] result = new char[s.length()];
        int idx = 0;
        while(map.get(maxChar) > 0) {
            result[idx] = maxChar;
            idx=idx+2;
            map.put(maxChar,map.get(maxChar)-1);
        }
        for(char c : map.keySet()) {
            while(map.get(c)>0) {
                if(idx >= result.length) {
                    idx = 1;
                }
                result[idx] = c;
                idx +=2;
                map.put(c,map.get(c)-1);
                
            }
            
        }
        return String.valueOf(result);
    }
}