/**
* 11. Container With Most Water
* Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of the line i is at (i, ai) and (i, 0). Find 
* two lines, which, together with the x-axis forms a container, such that the container contains the most water.
* Notice that you may not slant the container.
*/

class Solution {
    public int maxArea(int[] height) {
        
        int maxArea = 0;
        /*
        int i = 0;
        int j = height.length-1;
        while(i<j) {
            maxArea = Math.max(maxArea, (j-i)*Math.min(height[i],height[j]));
            if(height[i]<height[j]) {
                i++;
            } else 
                j--;
        }
        return maxArea;*/
        int[] maxLeft = new int[height.length];
        int[] maxRight = new int[height.length];
        maxLeft[0] = 0;
        for(int i=1;i<height.length;i++) {
            maxLeft[i] = height[maxLeft[i-1]]>height[i]?maxLeft[i-1]:i;
        }
        maxRight[height.length-1] = height.length-1;
        for(int i = height.length-2;i>=0;i--) {
            maxRight[i] = height[maxRight[i+1]]>height[i]?maxRight[i+1]:i;
        }
        for(int i=0;i<height.length;i++) {
            int temp = (maxLeft[i]-maxRight[i]+1)*Math.min(height[maxLeft[i]],height[maxRight[i]]);
            maxArea = maxArea>temp?maxArea:temp;
        }
        return maxArea;
    }
}