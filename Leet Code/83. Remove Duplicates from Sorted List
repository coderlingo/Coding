/**
* 83. Remove Duplicates from Sorted List
* Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head == null || head.next == null)
            return head;
        ListNode cur = head.next;
        ListNode prev = head;
        while(cur !=null) {
            if(prev.val==cur.val) {
                while(cur!=null && cur.val == prev.val)
                    cur = cur.next;
                prev.next = cur; 
            } else {
                prev = prev.next;
                cur = cur.next;
            }
        }
        return head;
    }
}