/**
* 21. Merge Two Sorted Lists
* Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        ListNode root = null;
        ListNode cur1 = l1;
        ListNode cur2 = l2;
        ListNode cur = null;
        while(cur1!=null && cur2!=null) {
            if(cur1.val > cur2.val) {
                if(root == null) {
                    root = cur2;
                    cur = root;
                } else {
                    cur.next = cur2;
                    cur = cur.next;
                }
                cur2 = cur2.next;
                
            } else {
                if(root == null) {
                    root = cur1;
                    cur = root;
                } else {
                    cur.next = cur1;
                    cur = cur.next;
                }
                cur1 = cur1.next;
            }
            cur.next = null;
        }
        while(cur1!=null) {
            cur.next = cur1;
            cur1 = cur1.next;
            cur = cur.next;
            cur.next = null;
        }
        while(cur2!=null) {
            cur.next = cur2;
            cur2 = cur2.next;
            cur = cur.next;
            cur.next = null;
        }
        return root;
    }
}